package application;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.Label;

public class MainWindowController {
	
	private boolean start = false;
	private Model model = new Model();
	
	@FXML
	private Label result;
	@FXML
	private Button clearButton;
	
    private boolean isInteger2(String text) {
        try {
            Integer.parseInt(text);
        } catch (NumberFormatException e) {
            return false;
        }
        return true;
    }
	
	@FXML
	private void processNumpad(ActionEvent event) {
		String oldvalue = result.getText();
		String value = ((Button) event.getSource()).getText();
		// set result
		if (result.getText().matches("^0")) {
			result.setText(value);
		} else {
			result.setText(oldvalue + value);
		}
		// set number
		if (!start) {
			model.setNumber1(Double.parseDouble(result.getText()));
		} else {
			model.setNumber2(Double.parseDouble(result.getText()));
		}
		// change clear button mode
		if (!result.getText().equals("0")) {
			clearButton.setText("C");
		}
	}
	
	@FXML 
	private void processOperator(ActionEvent event) {
		String value = ((Button) event.getSource()).getText();
		model.setOperator(value);
		start = true;
	}
	
	@FXML 
	private void processClear() {
		model.clear();
		result.setText("0");
		clearButton.setText("AC");
	}
	
	@FXML 
	private void processReverse() {		
		double value = Double.parseDouble(result.getText());
		// set result
		if (result.getText().contains("-")) {
			result.setText(String.valueOf(value).replace("-", ""));
		} else {
			result.setText("-" + String.valueOf(value));
		}
		// set number
		if (!start) {
			model.setNumber1(value);
		} else {
			model.setNumber2(value);
		}
	}
	
	@FXML
	private void processPercentage() {
		double num = Double.parseDouble(result.getText());
		if (this.isInteger(num)) {
			System.out.println("true");
		} else {
			System.out.println("false");
		}
//		System.out.println(num);
//		if (isInteger(num)) {
//			result.setText(String.valueOf(num / 100.0));
//		} else {
//			result.setText(String.valueOf(num * 100));
//		}
	}
	
	private boolean isInteger(double num) {
		return (int) (Math.ceil(num)) == (int) (Math.floor(num));
	}
	
	@FXML 
	private void processCalculate() {
		double result = model.calculate();
		if (start) {
			this.result.setText(String.valueOf(result));
			model.setNumber1(result);
		}
	}
}   
